2)a)¿Cuántos elementos hay, al menos, en una heap de altura h?
en un heap de altura h tiene como minimo 2^h;

b) ¿Dónde se encuentra ubicado el elemento mínimo en una max-heap?

se encuentran en algunas de las hojas del arbol y si lo vemos en una representacion del un vector ubicados
estarian apartir de la posicion vector/ 2 + 1

c)c) ¿El siguiente arreglo es una max-heap : [23, 17, 14, 6, 13, 10, 1, 5, 7, 12] ?

no ya que el nodo 6 tiene de hijo al 5 y al 7 el cual es mayor.

3) Dados los siguientes árboles, indique si representan una heap. Justifique su respuesta

1)
                  1
                /   \
              3       7
                    /  \
                   8    9
                                          2)
                                                             4
                                                           /    \
                                                         2         7
                                                       /   \     /   \
                                                      1     3   6     9

el 1 no cumple la condicion que tiene que ser un arbol completo si bien tiene una estructura de max-heap
no se completa de izquierda a derecha .

el 2 no cumple con la condicion de max-heap o min-heap.

Ejercicio 4
Dibuje todas las min-heaps posibles para este conjunto de claves: {A, B, C, D, E}

todas las min-heps posibles son 4 y son estas
1)

      A
     / \
    B   C
   / \
  D   E

2)
      A
     / \
    B   D
   / \
  C   E

3)
      A
     / \
    B   E
   / \
  C   D
4)
        A
       / \
      C   B
     / \
    D   E

Ejercicio 5
A partir de una min-heap inicialmente vacía, dibuje la evolución del estado de la heap al ejecutar las
siguientes operaciones:
el resultado es

            7
           /
          8


Ejercicio 6
Aplique el algoritmo BuildHeap, para construir una min-heap en tiempo lineal, con los siguientes valores
{150, 80, 40, 10, 70, 110, 30, 120, 140, 60, 50, 130, 100, 20, 90}
si me dan este algoritmo armo el arbol como una heap sin nigun criterio
y comparo el ultimo nodo no hoja con sus hijos y dependiendo del criterio min-heap/ max-heap remplazo o no y voy al segundo nodo no hoja yreitero hasta llegar a la raiz



Ejercicio 7
Aplique el algoritmo HeapSort, para ordenar descendentemente los siguientes elementos:
{15, 18, 40, 1, 7, 10, 33, 2, 140, 500, 11, 12, 13, 90}

primero es ver si hacer min-heap o max-heap es lo contrario a lo que te te piden es decir si te piden ordenar de mayor a
menor se usaria min-heap y si te piden de menor a mayor se hace max-heap

y el algoritmo es el ultimo se replazo con el primero y se ordena la min-heap / max-heap muy importante hacer una marca para no tocar el ultimo


